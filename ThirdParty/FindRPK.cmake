if(WIN32)
    message(STATUS "RPK for Windows!.")
    if (CMAKE_CXX_COMPILER_ID MATCHES MSVC)
        if(NOT EXISTS ${CMAKE_SOURCE_DIR}/ThirdParty/MSVC/lib/x86/RPK.lib)
            set(MyURL "https://github.com/malysonb/RadiPako/releases/download/v1.2.0.1/RPK_MSVC.zip")
            set(Download_Path ${CMAKE_SOURCE_DIR}/ThirdParty/temp/RPK_MSVC.zip)
            set(Extracted ${CMAKE_SOURCE_DIR}/ThirdParty/MSVC)
            message(STATUS "Downloading RPK to " ${Download_Path})
            file(DOWNLOAD ${MyURL} ${Download_Path})
            message(STATUS "Extracting RPK to " ${Extracted})
            execute_process(COMMAND mkdir ${Extracted})
            execute_process(COMMAND powershell Expand-Archive -Path ${Download_Path} -DestinationPath ${CMAKE_SOURCE_DIR}/ThirdParty/temp/)
            execute_process(COMMAND cp -r ${CMAKE_SOURCE_DIR}/ThirdParty/temp/RPK_MSVC/* ${Extracted}/)
            execute_process(COMMAND rm -r ${CMAKE_SOURCE_DIR}/ThirdParty/temp)
        endif()
        set(RPK_INCLUDE_DIRS ${PREFIX}/MSVC/include)
        if(CMAKE_SIZEOF_VOID_P EQUAL 4)
            set(RPK_LIBRARIES ${PREFIX}/MSVC/lib/x86/RPK.lib)
        elseif(CMAKE_SIZEOF_VOID_P EQUAL 8)
            set(RPK_LIBRARIES ${PREFIX}/MSVC/lib/x64/RPK.lib)
        endif()
    elseif (CMAKE_CXX_COMPILER_ID MATCHES GNU)
        if(NOT EXISTS ${CMAKE_SOURCE_DIR}/ThirdParty/x86/lib/libRPK.dll)
            set(MyURL "https://github.com/malysonb/RadiPako/releases/download/v1.2.0.1/RPK_MINGW.zip")
            set(Download_Path ${CMAKE_SOURCE_DIR}/ThirdParty/temp/RPK_MINGW.zip)
            set(Extracted ${CMAKE_SOURCE_DIR}/ThirdParty/x86/)
            message(STATUS "Downloading RPK to " ${Download_Path})
            file(DOWNLOAD ${MyURL} ${Download_Path})
            execute_process(COMMAND mkdir ${Extracted})
            message(STATUS "Extracting RPK to " ${Extracted})
            execute_process(COMMAND powershell Expand-Archive -Path ${Download_Path} -DestinationPath ${CMAKE_SOURCE_DIR}/ThirdParty/temp/)
            message(STATUS "Copying")
            execute_process(COMMAND cp -r ${CMAKE_SOURCE_DIR}/ThirdParty/temp/RPK_MINGW/i686-w64-mingw32/. ${Extracted}/)
            if(CMAKE_SIZEOF_VOID_P EQUAL 8)
                set(Extracted ${CMAKE_SOURCE_DIR}/ThirdParty/x64/)
                execute_process(COMMAND cp -r ${CMAKE_SOURCE_DIR}/ThirdParty/temp/RPK_MINGW/x86_64-w64-mingw32/. ${Extracted}/)
            endif()
            execute_process(COMMAND rm -r ${CMAKE_SOURCE_DIR}/ThirdParty/temp)
        endif()
        if(CMAKE_SIZEOF_VOID_P EQUAL 4)
            set(RPK_INCLUDE_DIRS ${PREFIX}/x86/include)
            set(RPK_LIBRARIES ${PREFIX}/x86/lib/libRPK.dll)
        elseif(CMAKE_SIZEOF_VOID_P EQUAL 8)
            set(RPK_INCLUDE_DIRS ${PREFIX}/x64/include)
            set(RPK_LIBRARIES ${PREFIX}/x64/lib/libRPK.dll)
        endif()
    endif()
else()
    message(STATUS "RPK for linux.")
    set(RPK_INCLUDE_DIRS ${PREFIX}/)
    set(RPK_LIBRARIES ${PREFIX}/libRPK.a)
endif()